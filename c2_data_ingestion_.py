# -*- coding: utf-8 -*-
"""C2 Data Ingestion.

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14bfBWRonbt5swCAXMikudc4omSoq60fg
"""

# # Date 18 May 2024.
# Notes & Research by Mr Akhona Njeje.
# Topic : The Data Engineering Lifecycle..
# Research work for AKH INDUSTRIES, Big Data Engineering department [Engineering].
# AKH INDUSTRIES has 3 DPT's : [AI] [Engieering] [Real Estate]. This is groud work for the Data Architecture of AKH INDUSTRIES.

# What is the Data Engineering(DE) Lifecycle.

# In simple terms DE its all about turning raw data into useful end product, ready for consumption by analysts, data scientists, ai engineers & others.
# The life cycle is divided into 5 = Generation ---> Storage ---> Ingestion ---> Transformation ---> Serving data.
# In the cycle we also take into consideration = Data management ---> Security ---> Data architecture ---> Software engineering.

# 1st we get data from different sources & then we store it.
### Sources can be IoT devices, application, transactional databases etc.
### Theres alot to consider on sources, like how the sources system handles ingestion & data generation.
### An Engineer must ask themselves alor of questions, like at what rate is data generated? How events per seconds? How many giga bytes per hour? How often do errors occur?
### Whats a schema? refers to hierarchy of data logically, think of data at the levle of a whole system, drilling down into indivisual tables.
# 2nd we transform the data so we can serve it to our consumers(Analysts & Scientists).

# DATA Life cycle vs DATA Eng.
### Data eng cycle is a subset of DATA LIFE CYCLE.

# Storage.

# You need a place to store data, choosing 1 is key to success in the rest of the cycle.
# What question should i ask if i want STORAGE for a data warehouse, data lake, database etc?
### Is the sotrage solution in place with the architecture?
### What type of storage system should you use? depends on use case.
### Deciding on storage its part of architecture.

# Ingestion.

# Once you understand how your data is stored & your source system, you need to gather all that data.
# Lets consider key phases for ingestion.
### What is the data destination after ingestion?
### Two major data ingestion concepts:
###### Batch vs Streaming.
###### Pull vs Push.

###### Batch vs Streaming.
######### Batch refers like to a single block of data, example, data that we have streamed for 1 full day. Thats a single batch.
######### Streaming simply refers to real time, meaning data is available for the stream system.

# kEY CONSIDERATIONS FOR BATCH VS STREAMING.

# Should you stream 1st?
# We need to ask ourselves if streaming its a best solution over batch depending on user case.

# If you stream real time, can downstream storage systems handle the rate of data flow?
# Do you need a milli second real time data ingestion? or would a micro batch approach work every minute?
# Are streaming pipe lines & system reliable if infustructure fails.
# Should you use a managed service like (AWS, Google cloud, Azure)? or you will stand up on your own for AKH INDUSTRIES & use Kafka, Spark, Flink etc?
# If deploying a AI model, what benefits do i have  with online predictions>
# Are you getting data from a live production?

# This questions show that STREAMING 1ST might seem like a good idea, but its not always straight forward.
# Many great ingestion frameworks do handle both batch & micro batch ingestion styles.

# Batch is an exellent approach for many use cases such as model training & weekly reporting.

# PUSH vs PULL.

# In the PUSH model of data ingestion, a souce system writes data out to a target, wether a database or file system.
# In the PULL model of data ingestion, data is received & retrieved from source system.